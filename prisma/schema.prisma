generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("users")
}

model Category {
  id   String @id @default(uuid())
  name String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  products Product[]

  @@map("categories")
}

model Product {
  id String @id @default(uuid())

  name   String
  price  Decimal @db.Decimal(10, 2)
  banner String

  categoryId String @map("category_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  category   Category    @relation(fields: [categoryId], references: [id])
  orderItems OrderItem[]

  @@map("products")
}

model Order {
  id String @id @default(uuid())

  table  Int
  status Boolean @default(false)
  draft  Boolean @default(true)

  name String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  items OrderItem[]

  @@map("orders")
}

model OrderItem {
  id String @id @default(uuid())

  orderId   String @map("order_id")
  productId String @map("product_id")

  quantity Int

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}
